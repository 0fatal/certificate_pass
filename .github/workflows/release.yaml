name: Draft Github Release
on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    steps:
      - name: Get latest published release tag
        id: get_latest_release
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - name: Generate changelog since last published release
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.RELEASEBOT_TOKEN }}
          future_release: ${{ github.ref }}
          since_tag: ${{ steps.get_latest_release.outputs.release }}
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

  draft-release:
    name: Draft Github release
    needs: generate-changelog
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Draft release with changelog
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEBOT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: CertificatePass ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: true
          prerelease: false

  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [Android]
        include:
          - os: ubuntu-20.04
            target: Android
            build_target: apk
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
            asset_content_type: application/vnd.android.package-archive
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    needs: draft-release
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository
        uses: subosito/flutter-action@v2.4.0

      - name: Install Android dependencies
        if: matrix.target == 'Android'
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - run: flutter doctor -v
      # Checkout code, recreate missing files, and get packages.
      - name: Checkout code
        uses: actions/checkout@v2
      - run: flutter create .
      - run: flutter pub get

      # Build the application.
      - run: flutter build -v ${{ matrix.build_target }} --release

      # Package the build.
      - name: Rename build for Android
        if: matrix.target == 'Android'
        run: mv app-release.apk $GITHUB_WORKSPACE/certificate_pass_${{ matrix.target }}.apk
        working-directory: ${{ matrix.build_path }}

      # Upload the build.
      - name: Add packaged build to release draft
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASEBOT_TOKEN }}
        with:
          upload_url: ${{ needs.draft-release.outputs.upload_url }}
          asset_path: ./certificate_pass_${{ matrix.target }}${{ matrix.asset_extension }}
          asset_name: certificate_pass_${{ matrix.target }}${{ matrix.asset_extension }}
          asset_content_type: ${{ matrix.asset_content_type }}
